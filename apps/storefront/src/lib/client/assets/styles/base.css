/* Default HTML element styles go in this file. */
/* The `preflight.css` file clears some of the default styles for HTML elements, so you need to define default styles for your HTML elements in this file. */
/* These form the base styles that can be modified in your .svelte files. */
/* NOTE: I haven't been able to figure out how to get CSS nesting to work outside of Svelte components. */

html,
body {
	font-family: var(--sans-serif);
	font-size: 100%;
	color: var(--text-color);
	font-weight: normal;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin-bottom: var(--margin-bottom);
	font-family: var(--vintage);
}

h1 {
	font-size: var(--size-9);
}

h2 {
	font-size: var(--size-8);
}

h3 {
	font-size: var(--size-7);
}

h4 {
	font-size: var(--size-6);
}

h5 {
	font-size: var(--size-5);
}

h6 {
	font-size: var(--size-4);
}

p {
	margin-bottom: var(--margin-bottom);
}

ul, ol {
  list-style-position: outside;
  /* This margin style will keep the space between <li> elements equal, even if those <li> elements are nested. */
  margin: 10px 0;
  padding-left: 30px;
}

ul {
	list-style-type: disc;
}

ol {
	list-style-type: decimal;
}

li {
	margin-bottom: 10px;
}

a.table-link {
	color: var(--primary-bg);
	text-decoration-line: none;
	border-bottom: 1px dotted var(--primary-bg);
	cursor: pointer;
}

a.table-link:hover {
	border-bottom-color: transparent !important;
}

/* Many of the default button styles are removed or set in the preflight.css file,
so there is no need to remove those default styles here. */
button.link-styles {
	text-align: left;
	color: var(--text-color);
	border-bottom: 1px dotted var(--text-color);
}

button.link-styles.primary {
	color: var(--primary-bg);
	border-bottom-color: var(--primary-bg);
}

button.link-styles.secondary {
	color: var(--secondary-bg);
	border-bottom-color: var(--secondary-bg);
}

button.link-styles.tertiary {
	color: var(--tertiary-bg);
	border-bottom-color: var(--tertiary-bg);
}

/* Hide the border-bottom on hover, unless the button is disabled. */
button.link-styles:hover :not(:disabled) {
  /* If the border-bottom-color is set in a component, then it won't change to 
  transparent when a user hovers over it. But adding `!important` fixes that. */
  border-bottom-color: transparent !important;
}

br {
	line-height: 0; /* Firefox adds a line-height to <br> tags, so this removes that. */
	margin-bottom: var(--margin-bottom);
}

hr {
	margin: 30px 0;
	border: none;
	border-top: var(--border);
}

/* <pre> or triple backticks. */
pre, code {
	font-family: var(--monospace);
	border-radius: var(--radius);
	background-color: var(--element-bg);
}

pre {
	padding: 10px;
	margin-bottom: var(--margin-bottom);
}


/* <code> or single backticks. */
code {
	padding: 0 2px;
}

/* TODO: Convert the shiki package into a component that is located inside the /docs route. These styles need to go with the shiki component. */
/* Set the background color for shiki code examples. */
pre.shiki, pre.shiki code span.line {
	background-color: var(--secondary-bg) !important;
}

/* Remove the light-colored padding at the beginning and end of shiki code examples. */
pre.shiki code {
	padding: 0 !important;
}

/* --------------------------------------------------------------------- */
/* TABLE STYLES */
/* TODO: The following table styles should be used in a table component. */
/* --------------------------------------------------------------------- */
table {
	width: 100%;
	border-collapse: collapse;
}

tr {
	border-bottom: var(--border);
}

tbody tr:last-child {
	border-bottom: none;
}

th,
td {
	padding: 10px 25px;
	text-align: left;
	vertical-align: top;
}
